AWSTemplateFormatVersion: 2010-09-09
Description: A template for static hosting using S3 bucket and CloudFront

Parameters:

  LionBucketname:
    Type: String
    Default: www.lion.nasfinancialgroup.com

  DomainName:
    Type: String
    Default: nasfinancialgroup.com
  
  AcmCertificate:
    Description: Name of the certification Manager
    Type: 'AWS::SSM::Parameter::Value<String>' 
    Default: lion-cluster-certificate

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      BucketName: !Ref "LionBucketname"
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  CloudFrontOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Description: "origin access control(OAC) for allowing cloudfront to access S3 bucket"
        Name: lion-hosting-OAC
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - S3Bucket
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: "www.lion.nasfinancialgroup.com.s3.us-east-1.amazonaws.com"
            Id: static-hosting
            S3OriginConfig:
              OriginAccessIdentity: ""
            OriginAccessControlId: !GetAtt CloudFrontOriginAccessControl.Id
        Enabled: "true"
        DefaultRootObject: index.html
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
        HttpVersion: http2
        Aliases:
          - "*.lion.nasfinancialgroup.com"
        ViewerCertificate:
          AcmCertificateArn: !Ref "AcmCertificate"
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only
        DefaultCacheBehavior:
          AllowedMethods:
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
          Compress: true
          TargetOriginId: static-hosting
          ForwardedValues:
            QueryString: "false"
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: "www.lion.nasfinancialgroup.com"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: "cloudfront.amazonaws.com"
            Action: "s3:GetObject"
            Resource: "arn:aws:s3:::www.lion.nasfinancialgroup.com/*"
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub "arn:aws:cloudfront::362013628963:distribution/${CloudFrontDistribution}" # put the account ID number 

# output

Outputs:
  S3BucketName:
    Value:
      Ref: S3Bucket
  OriginAccessControl:
    Value:
      Ref: CloudFrontOriginAccessControl
  # OutputCloudFrontDistribution:
  #   Description: This is the CLF distro  
  #   Export:
  #     Name: !GetAtt '${AWS::StackName}-CloudFrontDistribution.CanonicalHostedZoneID'                            #     !Sub '${AWS::StackName}-CloudFrontDistribution'
  #   Value: !Ref CloudFrontDistribution  
  # OutputCloudFrontDistributionDNSName:
  #   Description: This is the CLF distro  
  #   Export:
  #     Name: !GetAtt '${AWS::StackName}-CloudFrontDistribution.DNSName'                            #     !Sub '${AWS::StackName}-CloudFrontDistribution'
  #   Value: !Ref CloudFrontDistribution  

  # DistroZoneID:
  #   Value:
  #     !GetAtt  "CloudFrontDistribution.CanonicalHostedZoneID"
  #   Export:
  #     Name: DistroZoneID
  DistroDnsName:
    Value: 
      !GetAtt "CloudFrontDistribution.DomainName"
    Export:
      Name: DistroDnsName
<<<<<<< HEAD
=======

>>>>>>> e480ddf23b969cd063e980b0c2fd7671342b5bd5
